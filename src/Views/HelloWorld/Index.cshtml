@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization;
@model MlNetCore.Models.Views.MovieGenreViewModel
@inject SignInManager<User> SignInManager
@using Microsoft.AspNetCore.Identity
@inject IViewLocalizer Localizer

@{
    ViewData["MovieGenre"] = Localizer["MovieGenre"];
    ViewData["MovieTitle"] = Localizer["MovieTitle"];
    ViewData["MovieRelDate"] = Localizer["MovieRelDate"];
    ViewData["MoviePrice"] = Localizer["MoviePrice"];
    ViewData["Rating"] = Localizer["Rating"];
    ViewData["NextPage"] = Localizer["NextPage"];
    ViewData["PrevPage"] = Localizer["PrevPage"];
}

@if (!SignInManager.IsSignedIn(User))
{
    <h2>Sign in to see more information.</h2>
}
else
{
    <h2>@ViewData["Title"]</h2>
    <button class="btn btn-sm btn-default" type ="button">
        <a asp-area="" asp-controller="HelloWorld" asp-action="NewMovie" class="navbar-brand">Create Movie</a>
    </button>
    <br><br>
    <form asp-controller="HelloWorld" asp-action="Index" method="get" class="container">
        <p>
            <select asp-for="MovieGenre" asp-items="Model.Genres">
                <option value="">All</option>
            </select>
            @ViewData["MovieTitle"]: <input type="text" name="SearchString" value="@Model.CurrentFilter">
            <input type="submit" value="Filter" />
        </p>
    </form>
    <br><br>
    <h4>This are the movies:</h4>
    <table class="table col-md-12">
        <thead>
            <tr>
                <th>
                    <a asp-controller="HelloWorld" asp-action="Index" asp-route-sortOrder="@Model.TitleSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movies[0].Title)
                    </a>
                </th>
                <th>
                    <a asp-controller="HelloWorld" asp-action="Index" asp-route-sortOrder="@Model.DateSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Movies[0].ReleaseDate)
                    </a>
                </th>
                <th>
                    <a asp-controller="HelloWorld" asp-action="Index" asp-route-sortOrder="@Model.GenreSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Movies[0].Genre)
                    </a>
                </th>
                <th>@Html.DisplayNameFor(model => model.Movies[0].Price)</th>
                <th>@Html.DisplayNameFor(model => model.Movies[0].Rating)</th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.Movies) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>

    
    var prevDisabled = !Model.Movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movies.HasNextPage ? "disabled" : "";
    

    <a asp-controller="HelloWorld" asp-action="Index"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.Movies.PageIndex - 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-default @prevDisabled">
        @ViewData["PrevPage"]
    </a>
    <a asp-controller="HelloWorld" asp-action="Index"
        asp-route-sortOrder="@Model.CurrentSort"
        asp-route-pageIndex="@(Model.Movies.PageIndex + 1)"
        asp-route-currentFilter="@Model.CurrentFilter"
        class="btn btn-default @nextDisabled">
        @ViewData["NextPage"]
    </a>
}
